[
    {
        "label": "copy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "copy",
        "description": "copy",
        "detail": "copy",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "battle",
        "importPath": "app.main",
        "description": "app.main",
        "isExtraImport": true,
        "detail": "app.main",
        "documentation": {}
    },
    {
        "label": "KNIGHTS",
        "importPath": "app.main",
        "description": "app.main",
        "isExtraImport": true,
        "detail": "app.main",
        "documentation": {}
    },
    {
        "label": "battle",
        "kind": 2,
        "importPath": "py-knights-fighting.app.main",
        "description": "py-knights-fighting.app.main",
        "peekOfCode": "def battle(knightsConfig):\n    knightsConfig = copy.deepcopy(knightsConfig)\n    # BATTLE PREPARATIONS:\n    lancelot = knightsConfig[\"lancelot\"]\n    # apply armour\n    lancelot[\"protection\"] = 0\n    for a in lancelot[\"armour\"]:\n        lancelot[\"protection\"] += a[\"protection\"]\n    # apply weapon\n    lancelot[\"power\"] += lancelot[\"weapon\"][\"power\"]",
        "detail": "py-knights-fighting.app.main",
        "documentation": {}
    },
    {
        "label": "KNIGHTS",
        "kind": 5,
        "importPath": "py-knights-fighting.app.main",
        "description": "py-knights-fighting.app.main",
        "peekOfCode": "KNIGHTS = {\n    \"lancelot\": {\n        \"name\": \"Lancelot\",\n        \"power\": 35,\n        \"hp\": 100,\n        \"armour\": [],\n        \"weapon\": {\n            \"name\": \"Metal Sword\",\n            \"power\": 50,\n        },",
        "detail": "py-knights-fighting.app.main",
        "documentation": {}
    },
    {
        "label": "base_knights_config",
        "kind": 2,
        "importPath": "py-knights-fighting.tests.test_main",
        "description": "py-knights-fighting.tests.test_main",
        "peekOfCode": "def base_knights_config():\n    return copy.deepcopy(KNIGHTS)\ndef test_base_knights(base_knights_config):\n    assert battle(base_knights_config) == {\n        \"Lancelot\": 0,\n        \"Arthur\": 30,\n        \"Mordred\": 35,\n        \"Red Knight\": 5,\n    }\ndef test_empty():",
        "detail": "py-knights-fighting.tests.test_main",
        "documentation": {}
    },
    {
        "label": "test_base_knights",
        "kind": 2,
        "importPath": "py-knights-fighting.tests.test_main",
        "description": "py-knights-fighting.tests.test_main",
        "peekOfCode": "def test_base_knights(base_knights_config):\n    assert battle(base_knights_config) == {\n        \"Lancelot\": 0,\n        \"Arthur\": 30,\n        \"Mordred\": 35,\n        \"Red Knight\": 5,\n    }\ndef test_empty():\n    assert battle(None) == None\ndef test_lancelot_overpowered(base_knights_config):",
        "detail": "py-knights-fighting.tests.test_main",
        "documentation": {}
    },
    {
        "label": "test_empty",
        "kind": 2,
        "importPath": "py-knights-fighting.tests.test_main",
        "description": "py-knights-fighting.tests.test_main",
        "peekOfCode": "def test_empty():\n    assert battle(None) == None\ndef test_lancelot_overpowered(base_knights_config):\n    base_knights_config[\"lancelot\"][\"hp\"] += 50\n    base_knights_config[\"lancelot\"][\"power\"] += 50\n    assert battle(base_knights_config) == {\n        \"Lancelot\": 45,\n        \"Arthur\": 30,\n        \"Mordred\": 0,\n        \"Red Knight\": 5,",
        "detail": "py-knights-fighting.tests.test_main",
        "documentation": {}
    },
    {
        "label": "test_lancelot_overpowered",
        "kind": 2,
        "importPath": "py-knights-fighting.tests.test_main",
        "description": "py-knights-fighting.tests.test_main",
        "peekOfCode": "def test_lancelot_overpowered(base_knights_config):\n    base_knights_config[\"lancelot\"][\"hp\"] += 50\n    base_knights_config[\"lancelot\"][\"power\"] += 50\n    assert battle(base_knights_config) == {\n        \"Lancelot\": 45,\n        \"Arthur\": 30,\n        \"Mordred\": 0,\n        \"Red Knight\": 5,\n    }\ndef test_red_knight_overpowered(base_knights_config):",
        "detail": "py-knights-fighting.tests.test_main",
        "documentation": {}
    },
    {
        "label": "test_red_knight_overpowered",
        "kind": 2,
        "importPath": "py-knights-fighting.tests.test_main",
        "description": "py-knights-fighting.tests.test_main",
        "peekOfCode": "def test_red_knight_overpowered(base_knights_config):\n    base_knights_config[\"red_knight\"][\"hp\"] += 50\n    base_knights_config[\"red_knight\"][\"power\"] += 50\n    assert battle(base_knights_config) == {\n        \"Lancelot\": 0,\n        \"Arthur\": 0,\n        \"Mordred\": 35,\n        \"Red Knight\": 55,\n    }\ndef test_lancelot_has_armour(base_knights_config):",
        "detail": "py-knights-fighting.tests.test_main",
        "documentation": {}
    },
    {
        "label": "test_lancelot_has_armour",
        "kind": 2,
        "importPath": "py-knights-fighting.tests.test_main",
        "description": "py-knights-fighting.tests.test_main",
        "peekOfCode": "def test_lancelot_has_armour(base_knights_config):\n    base_knights_config[\"lancelot\"][\"armour\"].append({\n        \"part\": \"helmet\",\n        \"protection\": 25,\n    })\n    assert battle(base_knights_config) == {\n        \"Lancelot\": 20,\n        \"Arthur\": 30,\n        \"Mordred\": 35,\n        \"Red Knight\": 5,",
        "detail": "py-knights-fighting.tests.test_main",
        "documentation": {}
    },
    {
        "label": "test_mordred_sword_is_not_poisoned",
        "kind": 2,
        "importPath": "py-knights-fighting.tests.test_main",
        "description": "py-knights-fighting.tests.test_main",
        "peekOfCode": "def test_mordred_sword_is_not_poisoned(base_knights_config):\n    base_knights_config[\"mordred\"][\"weapon\"][\"name\"] = \"Common Sword\"\n    base_knights_config[\"mordred\"][\"weapon\"][\"power\"] -= 15\n    assert battle(base_knights_config) == {\n        \"Lancelot\": 10,\n        \"Arthur\": 30,\n        \"Mordred\": 35,\n        \"Red Knight\": 5,\n    }\ndef test_arthur_armour_weak(base_knights_config):",
        "detail": "py-knights-fighting.tests.test_main",
        "documentation": {}
    },
    {
        "label": "test_arthur_armour_weak",
        "kind": 2,
        "importPath": "py-knights-fighting.tests.test_main",
        "description": "py-knights-fighting.tests.test_main",
        "peekOfCode": "def test_arthur_armour_weak(base_knights_config):\n    base_knights_config[\"arthur\"][\"armour\"][0][\"protection\"] -= 10\n    base_knights_config[\"arthur\"][\"armour\"][1][\"protection\"] -= 10\n    base_knights_config[\"arthur\"][\"armour\"][0][\"protection\"] -= 10\n    assert battle(base_knights_config) == {\n        \"Lancelot\": 0,\n        \"Arthur\": 0,\n        \"Mordred\": 35,\n        \"Red Knight\": 5,\n    }",
        "detail": "py-knights-fighting.tests.test_main",
        "documentation": {}
    },
    {
        "label": "test_arthur_and_lancelot_have_potion",
        "kind": 2,
        "importPath": "py-knights-fighting.tests.test_main",
        "description": "py-knights-fighting.tests.test_main",
        "peekOfCode": "def test_arthur_and_lancelot_have_potion(base_knights_config):\n    base_knights_config[\"arthur\"][\"potion\"] = {\n        \"name\": \"Dragon's heart\",\n        \"effect\": {\n            \"protection\": +20,\n            \"power\": +10,\n            \"hp\": +10,\n        }\n    }\n    base_knights_config[\"lancelot\"][\"potion\"] = {",
        "detail": "py-knights-fighting.tests.test_main",
        "documentation": {}
    }
]